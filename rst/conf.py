#!/usr/bin/env python3

import os
import sys

import s3ql

# Add tools
basedir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, os.path.join(basedir, 'util'))


# Add a custom role for command line options that does not try to reference anything.
def add_literal_role(rolename):
    from docutils import nodes
    from docutils.parsers.rst import roles

    nodeclass = nodes.literal
    generic = roles.GenericRole(rolename, nodeclass)
    role = roles.CustomRole(rolename, generic, {'classes': [rolename]})
    roles.register_local_role(rolename, role)


add_literal_role('cmdopt')
add_literal_role('var')  # A variable defined in a :samp: role

# Add our own Pygments Lexer
import pygments.lexers._mapping as pmap

pmap.LEXERS['CommandLineLexer'] = (
    'cmdline_lexer',
    'CommandLine',
    ('CommandLine', 'commandline'),
    (),
    (),
)


# -- General configuration -----------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.ifconfig', 'sphinx_pipeinclude']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
source_encoding = 'utf-8'

# The master toctree document.
master_doc = 'index'

# Warn about unresolved references
nitpicky = True

# General information about the project.
project = 'S3QL'
copyright = 'Â© 2008 Nikolaus Rath <Nikolaus@rath.org>'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = s3ql.VERSION
# The full version, including alpha/beta/rc tags.
release = s3ql.RELEASE

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of documents that shouldn't be included in the build.
# unused_docs = []

# List of directories, relative to source directory, that shouldn't be searched
# for source files.
exclude_trees = ['include']

# The reST default role (used for this markup: `text`) to use for all documents.
default_role = 'file'

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'colorful'
highlight_language = 'commandline'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  Major themes that come with
# Sphinx are currently 'default' and 'sphinxdoc'.
html_theme = 'sphinxdoc'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {'stickysidebar': 'true'}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
html_use_modindex = False

# If false, no index is generated.
html_use_index = False

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# If nonempty, this is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = ''

# Output file base name for HTML help builder.
htmlhelp_basename = 'S3QLdoc'


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
# latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
# latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
    ('index', 'manual.tex', 'S3QL Documentation', 'Nikolaus Rath', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# Additional stuff for the LaTeX preamble.
# latex_preamble = ''

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_use_modindex = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('man/mkfs', 'mkfs.s3ql', 'Create an S3QL file system', None, 1),
    ('man/mount', 'mount.s3ql', 'Mount an S3QL file system', None, 1),
    ('man/umount', 'umount.s3ql', 'Unmount an S3QL file system', None, 1),
    ('man/fsck', 'fsck.s3ql', 'Check an S3QL file system for errors', None, 1),
    ('man/ctrl', 's3qlctrl', 'Control a mounted S3QL file system', None, 1),
    ('man/adm', 's3qladm', 'Manage S3QL file systems', None, 1),
    ('man/cp', 's3qlcp', 'Copy-on-write replication on S3QL file systems', None, 1),
    ('man/lock', 's3qllock', 'Make trees on an S3QL file system immutable', None, 1),
    ('man/rm', 's3qlrm', 'Fast tree removal on S3QL file systems', None, 1),
    ('man/stat', 's3qlstat', 'Gather S3QL file system statistics', None, 1),
    ('man/expire_backups', 'expire_backups', 'Intelligently expire old backups', None, 1),
    ('man/pcp', 'pcp', 'Recursive, parallel copy of directory trees', None, 1),
    ('man/oauth_client', 's3ql_oauth_client', 'Obtain Google Storage OAuth2 tokens', None, 1),
    ('man/verify', 's3ql_verify', 'Verify data in an S3QL file system', None, 1),
]
